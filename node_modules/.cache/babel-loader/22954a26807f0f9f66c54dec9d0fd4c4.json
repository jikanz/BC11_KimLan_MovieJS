{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport movieAPI from \"../../../services/movieAPI\";\nconst initialState = {\n  banners: [],\n  isLoading: false,\n  error: null\n}; // Tạo action thông qua createAsyncThunk\n\nexport const getBanner = createAsyncThunk(\"banner/getBanner\", async () => {\n  const data = await movieAPI.getBanner();\n  return {\n    data\n  };\n});\nconst bannerSlice = createSlice({\n  name: \"banner\",\n  initialState,\n  reducers: {\n    getBannerRequest(state, action) {\n      state.isLoading = true;\n    },\n\n    getBannerSuccess(state, action) {\n      state.movies = action.payload.data;\n      state.isLoading = false;\n    },\n\n    getBannerFailure(state, action) {\n      state.error = action.payload.error;\n      state.isLoading = false;\n    }\n\n  },\n  extraReducers: {\n    [getBanner.pending]: (state, action) => {\n      state.isLoading = true;\n    },\n    [getBanner.fulfilled]: (state, action) => {\n      state.movies = action.payload.data;\n      state.isLoading = false;\n    },\n    [getBanner.rejected]: (state, action) => {\n      state.error = action.error.message;\n      state.isLoading = false;\n    }\n  }\n}); // export const { getMovieRequest, getMovieSuccess, getMovieFailure } =\n//   movieSlice.actions;\n\nexport default bannerSlice.reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/moi/reactMovieCyberFulll/src/modules/HomePage/slices/bannerSlice.js"],"names":["createSlice","createAsyncThunk","movieAPI","initialState","banners","isLoading","error","getBanner","data","bannerSlice","name","reducers","getBannerRequest","state","action","getBannerSuccess","movies","payload","getBannerFailure","extraReducers","pending","fulfilled","rejected","message","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AACA,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACxE,QAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACK,SAAT,EAAnB;AACA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CAHwC,CAAlC;AAKP,MAAMC,WAAW,GAAGT,WAAW,CAAC;AAC9BU,EAAAA,IAAI,EAAE,QADwB;AAE9BP,EAAAA,YAF8B;AAG9BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHO;;AAIRU,IAAAA,gBAAgB,CAACF,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACG,MAAN,GAAeF,MAAM,CAACG,OAAP,CAAeT,IAA9B;AACAK,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD,KAPO;;AAQRa,IAAAA,gBAAgB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACG,OAAP,CAAeX,KAA7B;AACAO,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD;;AAXO,GAHoB;AAgB9Bc,EAAAA,aAAa,EAAE;AACb,KAACZ,SAAS,CAACa,OAAX,GAAqB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHY;AAIb,KAACE,SAAS,CAACc,SAAX,GAAuB,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACG,MAAN,GAAeF,MAAM,CAACG,OAAP,CAAeT,IAA9B;AACAK,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD,KAPY;AAQb,KAACE,SAAS,CAACe,QAAX,GAAsB,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACR,KAAP,CAAaiB,OAA3B;AACAV,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD;AAXY;AAhBe,CAAD,CAA/B,C,CA+BA;AACA;;AAEA,eAAeI,WAAW,CAACe,OAA3B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport movieAPI from \"../../../services/movieAPI\";\r\n\r\nconst initialState = {\r\n  banners: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Tạo action thông qua createAsyncThunk\r\nexport const getBanner = createAsyncThunk(\"banner/getBanner\", async () => {\r\n  const data = await movieAPI.getBanner();\r\n  return { data };\r\n});\r\n\r\nconst bannerSlice = createSlice({\r\n  name: \"banner\",\r\n  initialState,\r\n  reducers: {\r\n    getBannerRequest(state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    getBannerSuccess(state, action) {\r\n      state.movies = action.payload.data;\r\n      state.isLoading = false;\r\n    },\r\n    getBannerFailure(state, action) {\r\n      state.error = action.payload.error;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getBanner.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getBanner.fulfilled]: (state, action) => {\r\n      state.movies = action.payload.data;\r\n      state.isLoading = false;\r\n    },\r\n    [getBanner.rejected]: (state, action) => {\r\n      state.error = action.error.message;\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// export const { getMovieRequest, getMovieSuccess, getMovieFailure } =\r\n//   movieSlice.actions;\r\n\r\nexport default bannerSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}