{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactBuoi15\\\\src\\\\modules\\\\MovieManagement\\\\pages\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { addMovie } from \"../actions/movieManagement\";\n/**\n * Data cần để thêm phim\n * tenPhim, biDanh, trailer, hinhAnh, moTa, ngayKhoiChieu, maNhom\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddMovie() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    control,\n    register,\n    handleSubmit,\n    watch\n  } = useForm();\n  const [imgPreview, setImgPreview] = useState(\"\");\n  const watchImg = watch(\"hinhAnh\", []);\n  const fileRef = useRef(null);\n  useEffect(() => {\n    // Từ 1 file ta có thể decode thành 1 string dạng base64 để có thể nhúng vào src của tag img\n    const file = watchImg[0];\n    if (!file) return;\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n\n    fileReader.onload = evt => {\n      console.log(evt.target.result);\n      setImgPreview(evt.target.result);\n    };\n  }, [watchImg]);\n\n  const onSubmit = values => {\n    console.log(values);\n    dispatch(addMovie(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"tenPhim\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"T\\xEAn Phim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"biDanh\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"B\\xED Danh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"trailer\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"hinhAnh\" // ref={fileRef}\n          ,\n          ...register(\"hinhAnh\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), imgPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgPreview,\n          alt: \"preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"moTa\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"M\\xF4 t\\u1EA3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"ngayKhoiChieu\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Ng\\xE0y Kh\\u1EDFi Chi\\u1EBFu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMovie, \"1XVfosaBwYtptbAkXrYVIqOUhuY=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/reactBuoi15/src/modules/MovieManagement/pages/AddMovie.js"],"names":["React","useState","useEffect","useRef","useDispatch","useForm","Controller","TextField","Button","addMovie","AddMovie","dispatch","control","register","handleSubmit","watch","imgPreview","setImgPreview","watchImg","fileRef","file","fileReader","FileReader","readAsDataURL","onload","evt","console","log","target","result","onSubmit","values","field"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { addMovie } from \"../actions/movieManagement\";\n\n/**\n * Data cần để thêm phim\n * tenPhim, biDanh, trailer, hinhAnh, moTa, ngayKhoiChieu, maNhom\n */\n\nexport default function AddMovie() {\n  const dispatch = useDispatch();\n  const { control, register, handleSubmit, watch } = useForm();\n\n  const [imgPreview, setImgPreview] = useState(\"\");\n  const watchImg = watch(\"hinhAnh\", []);\n\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    // Từ 1 file ta có thể decode thành 1 string dạng base64 để có thể nhúng vào src của tag img\n    const file = watchImg[0];\n\n    if (!file) return;\n\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n\n    fileReader.onload = (evt) => {\n      console.log(evt.target.result);\n      setImgPreview(evt.target.result);\n    };\n  }, [watchImg]);\n\n  const onSubmit = (values) => {\n    console.log(values);\n    dispatch(addMovie(values));\n  };\n\n  return (\n    <div>\n      <h1>Admin Add Movie</h1>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <Controller\n            name=\"tenPhim\"\n            control={control}\n            render={({ field }) => <TextField {...field} label=\"Tên Phim\" />}\n          />\n        </div>\n\n        <div>\n          <Controller\n            name=\"biDanh\"\n            control={control}\n            render={({ field }) => <TextField {...field} label=\"Bí Danh\" />}\n          />\n        </div>\n\n        <div>\n          <Controller\n            name=\"trailer\"\n            control={control}\n            render={({ field }) => <TextField {...field} label=\"Trailer\" />}\n          />\n        </div>\n\n        <div>\n          {/* Đối với 1 số thư viện khi submit input có type là file nó chỉ trả và đường dẫn của file tuy nhiên cái ta cần lấy là file để up lên hệ thống, lúc đó ta cần tự viết hàm onChange và lấy file bằng cách event.target.files */}\n          <input\n            type=\"file\"\n            id=\"hinhAnh\"\n            // ref={fileRef}\n            {...register(\"hinhAnh\")}\n            // style={{ display: \"none\" }}\n          />\n\n          {/* Sử dụng ref để có thể tương tác giữa các element với nhau */}\n          {/* <Button variant=\"contained\" color=\"primary\" onClick={() => fileRef.current.click()}>\n            Upload file\n          </Button> */}\n          {imgPreview && <img src={imgPreview} alt=\"preview\" />}\n        </div>\n\n        <div>\n          <Controller\n            name=\"moTa\"\n            control={control}\n            render={({ field }) => <TextField {...field} label=\"Mô tả\" />}\n          />\n        </div>\n\n        <div>\n          <Controller\n            name=\"ngayKhoiChieu\"\n            control={control}\n            render={({ field }) => (\n              <TextField {...field} label=\"Ngày Khởi Chiếu\" />\n            )}\n          />\n        </div>\n\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}