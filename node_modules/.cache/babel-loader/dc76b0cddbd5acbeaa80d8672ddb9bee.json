{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactBuoi15\\\\src\\\\routes\\\\AdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoute({\n  children,\n  ...rest\n}) {\n  _s();\n\n  // define những logic mình muốn ở đây\n  // Lấy thông tin user và kiểm tra xem có quyền truy cập vào admin hay không\n  const {\n    currentUser\n  } = useSelector(state => state.auth);\n\n  if (!currentUser || currentUser.maLoaiNguoiDung === \"KhachHang\") {\n    // Không có quyền truy cập\n    // return 1 component nào đó thông báo không được phép truy cập\n    // return <PageForbidden />\n    // return về component Redirect dễ chuyển hướng người dùng về 1 trang hợp lệ\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AdminRoute, \"Ufl+rr8RMfBJwOGREuKsgPnUa48=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/reactBuoi15/src/routes/AdminRoute.js"],"names":["React","Route","Redirect","useSelector","AdminRoute","children","rest","currentUser","state","auth","maLoaiNguoiDung"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAApB,EAA2C;AAAA;;AACxD;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAnC;;AAEA,MAAI,CAACF,WAAD,IAAgBA,WAAW,CAACG,eAAZ,KAAgC,WAApD,EAAiE;AAC/D;AAEA;AACA;AAEA;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,KAAD,OAAWJ,IAAX;AAAA,cAAkBD;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhBuBD,U;UAGED,W;;;KAHFC,U","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nexport default function AdminRoute({ children, ...rest }) {\n  // define những logic mình muốn ở đây\n  // Lấy thông tin user và kiểm tra xem có quyền truy cập vào admin hay không\n  const { currentUser } = useSelector((state) => state.auth);\n\n  if (!currentUser || currentUser.maLoaiNguoiDung === \"KhachHang\") {\n    // Không có quyền truy cập\n\n    // return 1 component nào đó thông báo không được phép truy cập\n    // return <PageForbidden />\n\n    // return về component Redirect dễ chuyển hướng người dùng về 1 trang hợp lệ\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...rest}>{children}</Route>;\n}\n"]},"metadata":{},"sourceType":"module"}