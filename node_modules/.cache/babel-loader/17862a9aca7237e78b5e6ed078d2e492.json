{"ast":null,"code":"import { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, REGISTER_FAILURE, REGISTER_REQUEST } from \"../constants/auth\";\nconst currentUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nconst initialState = {\n  isLoading: false,\n  error: null,\n  currentUser\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case REGISTER_REQUEST:\n      {\n        return { ...state,\n          isLoading: true,\n          error: null\n        };\n      }\n\n    case LOGIN_FAILURE:\n    case REGISTER_FAILURE:\n      {\n        return { ...state,\n          isLoading: false,\n          error: action.payload.error\n        };\n      }\n\n    case LOGIN_SUCCESS:\n      {\n        return { ...state,\n          isLoading: false,\n          currentUser: action.payload.data\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/moi/reactMovieCyberFulll/src/modules/Auth/reducers/auth.js"],"names":["LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","REGISTER_FAILURE","REGISTER_REQUEST","currentUser","localStorage","getItem","JSON","parse","initialState","isLoading","error","authReducer","state","action","type","payload","data"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,gBALF,QAMO,mBANP;AAQA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,GAEhB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBP,EAAAA;AAHmB,CAArB;;AAMA,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,aAAL;AACA,SAAKG,gBAAL;AAAuB;AACrB,eAAO,EAAE,GAAGU,KAAL;AAAYH,UAAAA,SAAS,EAAE,IAAvB;AAA6BC,UAAAA,KAAK,EAAE;AAApC,SAAP;AACD;;AACD,SAAKZ,aAAL;AACA,SAAKG,gBAAL;AAAuB;AACrB,eAAO,EAAE,GAAGW,KAAL;AAAYH,UAAAA,SAAS,EAAE,KAAvB;AAA8BC,UAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAApD,SAAP;AACD;;AAED,SAAKV,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGY,KADE;AAELH,UAAAA,SAAS,EAAE,KAFN;AAGLN,UAAAA,WAAW,EAAEU,MAAM,CAACE,OAAP,CAAeC;AAHvB,SAAP;AAKD;;AAED;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n} from \"../constants/auth\";\n\nconst currentUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  currentUser,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case REGISTER_REQUEST: {\n      return { ...state, isLoading: true, error: null };\n    }\n    case LOGIN_FAILURE:\n    case REGISTER_FAILURE: {\n      return { ...state, isLoading: false, error: action.payload.error };\n    }\n\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        currentUser: action.payload.data,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}